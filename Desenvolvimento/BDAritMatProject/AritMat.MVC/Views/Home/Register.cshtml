@model AritMat.MVC.Models.ViewModels.AlunoRegisterModel
@{
    ViewBag.Title = "Registar";
}

<body>

    @using (Html.BeginForm("Register", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(m => m.Nome, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Nome, new {@class = "form-control"})
            </div>
        </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DataNasc, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.DataNasc, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
        </div>
    </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register"/>
            </div>
        </div>
    <p>
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{
        foreach (ModelState mState in ViewData.ModelState.Values)
        {
            foreach (ModelError mError in mState.Errors)
            {
                @Html.Label(mError.ErrorMessage, new { @class = "text-danger" })
            }
        }
        }
    </p>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</body>